name: Builds

on:
  push:
    branch : [ 'main' ]

jobs:
<<<<<<< HEAD

=======
  needData:
    name: pfff
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true 
      - run: pwd
        shell: bash
      - run: ls -a
        shell: bash
>>>>>>> main
  buildForWindowsBasedPlatforms:
    if: startsWith(github.ref, 'refs/tags/release')
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
<<<<<<< HEAD
        projectPath:
          - ./
=======
        libraryPath:
          - ./Library
>>>>>>> main
        targetPlatform:
          - StandaloneWindows # Build a Windows 32-bit standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - tvOS # Build an AppleTV player.
          - WSAPlayer # Build a UWP App.
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/cache@v3
        with:
<<<<<<< HEAD
          path: ${{ matrix.projectPath }}/Library
          key:
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
            hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
=======
          path: ./Library
          key:
            Library-${{ matrix.targetPlatform }}-${{ hashFiles(matrix.libraryPath) }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
>>>>>>> main
            Library-
      - uses: game-ci/unity-builder@v4.2.3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v3
        with:
          name: Build ${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
  
  buildForLinuxBasedPlatforms:
    if: startsWith(github.ref, 'refs/tags/release')
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
<<<<<<< HEAD
        projectPath:
          - ./
=======
        libraryPath:
          - ./Library
>>>>>>> main
        targetPlatform:
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          - iOS # Build an iOS player.
          - Android # Build an Android player.
          - WebGL # WebGL
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/cache@v3
        with:
<<<<<<< HEAD
          path: ${{ matrix.projectPath }}/Library
          key:
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
            hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
=======
          path: ./Library
          key:
            Library-${{ matrix.targetPlatform }}-${{ hashFiles(matrix.libraryPath) }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
>>>>>>> main
            Library-
      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.2.0
      - uses: game-ci/unity-builder@v4.2.3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v3
        with:
          name: Build ${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
